services:
  flask_app:
    build:
      context: .  # Diretório atual
      dockerfile: Dockerfile
    ports:
      - "80:80"  # Porta 80 do host mapeada para o container
    volumes:
      - .:/app  # Monta o diretório local no container
    environment:
      - FLASK_ENV=development
      - MQTT_BROKER=BrokerEstacao
    command: python app.py  # Comando para iniciar a aplicação Flask
    depends_on:
      - mysql  # Garantir que o MySQL seja iniciado antes do Flask

  mysql:
    image: mysql:8.0
    container_name: mysql-database
    environment:
      MYSQL_ROOT_PASSWORD: example  # Senha do root
      MYSQL_DATABASE: weather_data  # Banco de dados inicial
    ports:
      - "3306:3306"  # Porta do MySQL para acesso externo
    volumes:
      - mysql_data:/var/lib/mysql  # Volume persistente para os dados
      - ./tabela.sql:/docker-entrypoint-initdb.d/tabela.sql  # Script SQL de inicialização
    deploy:
      resources:
        limits:
          memory: 512M  # Limitar uso de memória para evitar estouro
    restart: unless-stopped  # Reinicia o container automaticamente se ele falhar
  
  mosquitto:
    image: eclipse-mosquitto:latest  # Imagem oficial do Mosquitto
    container_name: mosquitto-broker  # Nome do container
    ports:
      - "1883:1883"  # Porta MQTT
    volumes:
      - ./mosquitto.conf:/mosquitto/config/mosquitto.conf  # Configuração do Mosquitto
      - ./data:/mosquitto/data  # Persistência de dados
      - ./log:/mosquitto/log  # Persistência de logs
    restart: always  # Reiniciar automaticamente

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: phpmyadminN 
    environment:
      PMA_HOST: mysql  # Nome do serviço MySQL no Docker Compose
      PMA_PORT: 3306
      MYSQL_ROOT_PASSWORD: example  # Deve ser igual ao configurado no MySQL
    ports:
      - "8000:80"  # Porta para acessar o phpMyAdmin no navegador
    depends_on:
      - mysql

volumes:
  mysql_data:
    driver: local
