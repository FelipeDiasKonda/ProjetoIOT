services:
  flask_app:
    build:
      context: .  # Diretório atual
      dockerfile: Dockerfile
    ports:
      - "80:80"  # Porta 80 do host mapeada para o container
    volumes:
      - .:/app  # Monta o diretório local no container
    environment:
      - FLASK_DEBUG=1
      - FLASK_ENV=development
      - MQTT_BROKER=BrokerEstacao  # Certifique-se de usar variáveis para flexibilidade
    command: gunicorn -w 4 --reload -b 0.0.0.0:80 app:app
    depends_on:
      - mysql
      - mqtt_handler  # Garante que o serviço MQTT seja iniciado antes, se necessário

  mqtt_handler:
    build:
      context: .  # Pode ser o mesmo contexto se as dependências forem iguais
      dockerfile: Dockerfile  # Se necessário, você pode criar um Dockerfile específico para o MQTT
    volumes:
      - .:/app
    environment:
      - MQTT_BROKER=BrokerEstacao
    command: python mqtt_handler.py  # Ou python mqtt_setup.py, conforme o nome do seu script
    depends_on:
      - mysql

  mysql:
    image: mysql:8.0
    container_name: mysql-database
    environment:
      MYSQL_ROOT_PASSWORD: example
      MYSQL_DATABASE: weather_data
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./tabela.sql:/docker-entrypoint-initdb.d/tabela.sql
    deploy:
      resources:
        limits:
          memory: 250M
    restart: unless-stopped
  
volumes:
  mysql_data:
    driver: local
